{"version":3,"sources":["component/Searchbar/Searchbar.styled.js","component/Searchbar/Searchbar.jsx","component/Container/Container.styled.js","component/Container/Container.jsx","component/ImageGalleryItem/ImageGalleryItem.styled.js","component/ImageGalleryItem/ImageGalleryItem.jsx","component/ImageGallery/ImageGallery.styled.js","component/ImageGallery/ImageGallery.jsx","component/service/pixabay-api.js","component/Button/ButtonLoad.styled.js","component/Button/Button.jsx","component/Modal/Modal.styled.js","component/Modal/Modal.jsx","component/App/App.jsx","index.js"],"names":["SearchBar","styled","header","SearchForm","form","SearchFormButton","button","SearchFormLabel","span","SearchFormInput","input","Searchbar","onSubmit","useState","imageName","setImageName","event","preventDefault","trim","toast","error","type","name","placeholder","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","Section","div","Container","children","Item","li","Image","img","ImageGalleryItem","src","largeImageURL","tags","onSetImgInfo","alt","onClick","List","ul","ImageGallery","images","map","image","webformatURL","id","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","Btn","Button","onClickLoadMore","Overlay","ModalImg","Img","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","target","Status","App","setImages","status","setStatus","setError","setAlt","currentPage","setCurrentPage","showModal","setShowModal","setLargeImageURL","pixabayAPI","total","dark","prevState","hits","catch","finally","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","style","margin","textAlign","fontSize","length","color","height","width","timeout","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c3663ef.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\r\n// import { ImSearch } from 'react-icons/im';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  SearchBar,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormLabel,\r\n  SearchFormInput,\r\n} from './Searchbar.styled';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n  const [imageName, setImageName] = useState('')\r\n \r\n\r\n  const handleNameChange = event => {\r\n   setImageName( event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (imageName.trim() === '') {\r\n      toast.error('Please, enter something!');\r\n      return;\r\n    }\r\n\r\n    onSubmit(imageName);\r\n    setImageName('');\r\n  };\r\n\r\n    return (\r\n      <SearchBar>\r\n        <SearchForm onSubmit={handleSubmit}>\r\n          <SearchFormButton type=\"submit\">\r\n            <SearchFormLabel>\r\n              {/* <ImSearch style={{ marginRight: 8 }} /> */}\r\n            </SearchFormLabel>\r\n          </SearchFormButton>\r\n          <SearchFormInput\r\n            type=\"text\"\r\n            name=\"imageName\"\r\n            placeholder=\"Search images and photos\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            value={imageName}\r\n            onChange={handleNameChange}\r\n          />\r\n        </SearchForm>\r\n      </SearchBar>\r\n    );\r\n  \r\n}\r\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  max-width: 100%;\n  /* display: flex;\n  flex-direction: column; */\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  padding: 15px 30px;\n  text-align: center;\n`;\n","import { Section } from './Container.styled';\r\n\r\nfunction Container({ children }) {\r\n  return <Section>{children}</Section>;\r\n}\r\n\r\nexport default Container;\r\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  border-radius: 3px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport { Item, Image } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({\r\n  src,\r\n  largeImageURL,\r\n  tags = \"\",\r\n  onSetImgInfo\r\n}) => {\r\n    return (\r\n      <Item>\r\n        <Image\r\n          src={src}\r\n          alt={tags}\r\n          onClick={() => {\r\n          onSetImgInfo({ largeImageURL, tags });\r\n        }}/>\r\n    \r\n      </Item>\r\n    );\r\n\r\n};\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    onSetImgInfo: PropTypes.func.isRequired,\r\n};\r\n  \r\nexport default ImageGalleryItem","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { List } from './ImageGallery.styled';\r\n\r\nexport default function ImageGallery({ images, onSetImgInfo }) {\r\n  return (\r\n    <List>\r\n      {images &&\r\n        images.map(image => {\r\n          return (\r\n            <ImageGalleryItem\r\n              src={image.webformatURL}\r\n              alt={image.tags}\r\n              largeImageURL={image.largeImageURL}\r\n              key={image.id}\r\n              onSetImgInfo={onSetImgInfo}\r\n            />\r\n          );\r\n        })}\r\n    </List>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","function fetchImage(name, page) {\n  const KEY = '18992166-123806360f211761da038f5eb';\n  const BASE_URL = 'https://pixabay.com/api/';\n\n  return fetch(\n    `${BASE_URL}?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Invalid request'));\n  });\n}\n\nconst api = {\n  fetchImage,\n};\n\nexport default api;\n","// * Стили компонента Buton (Load more)\nimport styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  margin: 30px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport { Btn } from './ButtonLoad.styled';\r\n\r\nexport default function Button({ onClickLoadMore }) {\r\n  return (\r\n    <>\r\n      <Btn type=\"button\" onClick={onClickLoadMore}>\r\n        Load more\r\n      </Btn>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClickLoadMore: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalImg = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Img = styled.img``;\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Overlay, ModalImg, Img } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\n\r\nexport default function Modal({onClose, largeImageURL, alt}) {\r\n \r\n\r\n  useEffect(() =>{\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n  \r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  \r\n  },[onClose])\r\n\r\n\r\n  const handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <Overlay onClick={handleOverlayClick}>\r\n      <ModalImg>\r\n        <Img src={largeImageURL} alt={alt} />\r\n              </ModalImg>\r\n    </Overlay>,\r\n    modalRoot,\r\n  );\r\n  \r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n  };","import { useState, useEffect } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport Container from '../Container/Container';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport pixabayAPI from '../service/pixabay-api';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\n\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function App() {\r\n  const [imageName, setImageName] = useState('')\r\n  const [images, setImages] = useState([])\r\n  const [status, setStatus] = useState(Status.IDLE)\r\n  const [error, setError] = useState(null)\r\n  const [alt, setAlt] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [largeImageURL, setLargeImageURL] = useState('')\r\n  \r\n \r\n\r\n  const handleSearchForm = imageName => {\r\n    setImageName(imageName);\r\n    setImages([]);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n   useEffect(() => {\r\n    if (!imageName) {\r\n      return;\r\n    }\r\n       \r\n    setStatus(Status.PENDING)\r\n    \r\n    pixabayAPI\r\n      .fetchImage(imageName, currentPage)\r\n      .then(images => {\r\n        if (images.total === 0) {\r\n          toast.dark('No images. Please try another query!');\r\n          setStatus(Status.REJECTED);\r\n\r\n          return;\r\n        }\r\n\r\n    \r\n        setImages(prevState => [...prevState, ...images.hits])\r\n        setStatus(Status.RESOLVED)\r\n      })\r\n      .catch(error => {setError(error);\r\n       setStatus(Status.REJECTED)})\r\n      .finally(() => {\r\n        setTimeout(() => {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }, 500);\r\n      });\r\n  },[currentPage, imageName])\r\n\r\n    \r\n   const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const setImgInfo = ({src, alt}) => {\r\n    setLargeImageURL(src);\r\n    setAlt(alt);\r\n    toggleModal();\r\n  };\r\n\r\n  const  onClickLoadMore = () => {\r\n   setCurrentPage(prevState => \r\n      prevState + 1\r\n    );\r\n  };\r\n\r\n    return (\r\n    <Container>\r\n      <Searchbar onSubmit={handleSearchForm} />\r\n\r\n      {status === Status.IDLE && (\r\n        <div\r\n          style={{\r\n            margin: '20px auto',\r\n            textAlign: 'center',\r\n            fontSize: '20px',\r\n          }}\r\n        >\r\n          Please, enter a query!\r\n        </div>\r\n      )}\r\n      {images.length > 0 && (\r\n        <>\r\n             <ImageGallery images={images} onSetImgInfo={setImgInfo} />\r\n            <Button onClickLoadMore={onClickLoadMore} />\r\n                {showModal && (\r\n    \r\n    \r\n          <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {status === Status.PENDING && (\r\n        <div>\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        </div>\r\n      )}\r\n      {status === Status.REJECTED && null}\r\n\r\n      <ToastContainer autoClose={3000} />\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport App from './component/App//App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}